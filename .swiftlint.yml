# SwiftLint Configuration for Receipt Scanner Expense Tracker

# Paths to include/exclude
included:
  - ReceiptScannerExpenseTracker/ReceiptScannerExpenseTracker
excluded:
  - ReceiptScannerExpenseTracker/ReceiptScannerExpenseTracker.xcodeproj
  - ReceiptScannerExpenseTracker/build
  - ReceiptScannerExpenseTracker/ReceiptScannerExpenseTrackerTests
  - ReceiptScannerExpenseTracker/ReceiptScannerExpenseTrackerUITests
  - .git

# Rules to disable
disabled_rules:
  - trailing_whitespace # Let swift-format handle this
  - todo # Allow TODO comments during development
  - line_length # Let swift-format handle line length

# Opt-in rules (additional checks)
opt_in_rules:
  - empty_count # Use isEmpty instead of count == 0
  - force_unwrapping # Warn about force unwrapping
  - implicitly_unwrapped_optional # Avoid implicitly unwrapped optionals
  - weak_delegate # Delegates should be weak
  - unneeded_parentheses_in_closure_argument # Clean closure syntax
  - redundant_nil_coalescing # Remove unnecessary ?? nil
  - contains_over_filter_count # Use contains instead of filter.count
  - contains_over_filter_is_empty # Use contains instead of filter.isEmpty
  - empty_collection_literal # Use isEmpty for empty collections
  - first_where # Use first(where:) instead of filter().first
  - last_where # Use last(where:) instead of filter().last
  - reduce_into # Use reduce(into:) for performance
  - sorted_first_last # Use min/max instead of sorted().first/last
  - unused_import # Detect unused imports
  - unused_declaration # Detect unused declarations

# Rule configurations
line_length:
  warning: 120
  error: 150

file_length:
  warning: 400
  error: 500

function_body_length:
  warning: 50
  error: 100

type_body_length:
  warning: 300
  error: 400

cyclomatic_complexity:
  warning: 10
  error: 20

nesting:
  type_level:
    warning: 2
    error: 3
  statement_level:
    warning: 5
    error: 10

identifier_name:
  min_length:
    warning: 2
    error: 1
  max_length:
    warning: 40
    error: 50
  excluded:
    - id
    - x
    - y
    - z

# Custom rules for memory management
custom_rules:
  memory_leak_check:
    name: "Potential Memory Leak"
    regex: '\[weak\s+self\].*self\??\.'
    message: "Consider using [weak self] and guard let self = self else { return } pattern"
    severity: warning